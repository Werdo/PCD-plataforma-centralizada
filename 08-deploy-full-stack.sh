#!/bin/bash

# Script: 08-deploy-full-stack.sh
# Aplica el manifiesto consolidado y verifica despliegue s√≥lo si existen todos los componentes

set -e

STACK_FILE="/home/ppelaez/plataforma-centralizada/k8s/K8s-deploy-stack.yaml"
NAMESPACE="central-platform"
DEPLOYMENTS=(
  api-rest
  websocket
  alerts
  frontend-facit
  frontend-fyr
  gateway-t301
  gateway-goodwe
  openai-proxy
)

# Verificar manifiesto
if [ ! -f "$STACK_FILE" ]; then
  echo "‚ùå ERROR: No se encuentra el manifiesto $STACK_FILE"
  exit 1
fi

# Validar que los deployments existen (asumimos que se aplicaron antes con 03)
for DEP in "${DEPLOYMENTS[@]}"; do
  if ! kubectl get deployment "$DEP" -n "$NAMESPACE" >/dev/null 2>&1; then
    echo "‚ùå ERROR: No se encontr√≥ el deployment $DEP en el namespace $NAMESPACE"
    echo "‚ÑπÔ∏è Ejecuta ./scripts/03-sync-manifests.sh para aplicar los manifiestos individuales."
    exit 1
  fi
done

echo "üöÄ Despliegue completo de la plataforma centralizada"
echo "üì¶ Aplicando stack..."
kubectl apply -f "$STACK_FILE"

echo "‚è≥ Esperando disponibilidad de los servicios..."
for DEP in "${DEPLOYMENTS[@]}"; do
  echo "‚åõ Esperando: $DEP"
  if kubectl rollout status deployment "$DEP" -n "$NAMESPACE" --timeout=180s; then
    echo "‚úÖ $DEP desplegado correctamente"
  else
    echo "‚ö†Ô∏è  $DEP no listo a tiempo"
  fi
  echo ""
done

# Obtener IP p√∫blica externa
IP=$(curl -s ifconfig.me)
if [[ -z "$IP" ]]; then
  IP=$(hostname -I | awk '{print $1}')
  echo "‚ö†Ô∏è No se pudo obtener IP p√∫blica. Usando IP local: $IP"
else
  echo "üåê IP p√∫blica detectada: $IP"
fi

# Mostrar accesos principales
echo "‚úÖ Despliegue completado. Accesos disponibles:"
echo "   http://$IP:30080/admin     ‚Üí Facit (admin)"
echo "   http://$IP:30080/app       ‚Üí Fyr (IA p√∫blica)"
echo "   http://$IP:30080/api       ‚Üí API REST"
echo "   ws://$IP:30080/ws          ‚Üí WebSocket backend"

